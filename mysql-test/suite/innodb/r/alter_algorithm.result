# ALTER COPY ALGORITHM
CREATE TABLE t1(f1 INT NOT NULL,
f2 INT NOT NULL,
f3 INT NULL,
f4 INT as (f2) STORED,
f5 INT as (f3) STORED,
PRIMARY KEY(f1))ROW_FORMAT=COMPRESSED, ENGINE=INNODB;
INSERT INTO t1(f1, f2, f3) VALUES(1, 1, 1);
#
# ALGORITHM=COPY
#
# All the following cases needs table rebuild
# Add and Drop primary key
ALTER TABLE t1 ADD COLUMN col1 INT NOT NULL,DROP PRIMARY KEY,ADD PRIMARY KEY(col1), ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Make existing column NULLABLE
ALTER TABLE t1 MODIFY f2 INT, ALGORITHM= COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Make existing column NON-NULLABLE
ALTER TABLE t1 MODIFY f3 INT NOT NULL, ALGORITHM= COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Drop Stored Column
ALTER TABLE t1 DROP COLUMN f5, ALGORITHM= COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Add base non-generated column as a last column in the compressed table
ALTER TABLE t1 ADD COLUMN f6 INT NOT NULL, ALGORITHM= COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Add base non-generated column but not in the last position
ALTER TABLE t1 ADD COLUMN f7 INT NOT NULL after f3, ALGORITHM= COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Force the table to rebuild
ALTER TABLE t1 FORCE, ALGORITHM= COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Row format changes
ALTER TABLE t1 ROW_FORMAT=COMPRESSED, ALGORITHM= COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Engine table
ALTER TABLE t1 ENGINE=INNODB, ALGORITHM= COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
DROP TABLE t1;
affected rows: 0
CREATE TABLE t1(f1 INT PRIMARY KEY, f2 INT NOT NULL,
f3 INT AS (f2 * f2) VIRTUAL,
f4 INT NOT NULL UNIQUE,
INDEX`idx`(f2))ENGINE=INNODB;
CREATE TABLE t2(f1 INT NOT NULL, f2 INT NOT NULL,
INDEX(f1),
FOREIGN KEY `fidx` (f1) REFERENCES t1(f1))ENGINE=INNODB;
INSERT INTO t1(f1, f2, f4) VALUES(1, 2, 3);
#
# ALGORITHM=COPY
#
# Add secondary index
ALTER TABLE t1 ADD INDEX `idx1`(f4), ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Drop secondary index
ALTER TABLE t1 DROP INDEX `idx`, ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Add Unique Index
ALTER TABLE t1 ADD UNIQUE INDEX `u1`(f2), ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Drop Unique Index
ALTER TABLE t1 DROP INDEX `f4`, ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Add foreign & Drop foreign key
SET foreign_key_checks = 0;
affected rows: 0
ALTER TABLE t1 ADD FOREIGN KEY(f1) REFERENCES t2(f1), ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
ALTER TABLE t2 DROP FOREIGN KEY `fidx`, ALGORITHM=COPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
DROP TABLE t2, t1;
affected rows: 0
SET foreign_key_checks = 1;
affected rows: 0
CREATE TABLE t1(f1 INT NOT NULL,
f2 INT NOT NULL,
f3 INT AS (f2 * f2) VIRTUAL)engine=innodb;
INSERT INTO t1(f1, f2) VALUES(1, 1);
#
# ALGORITHM=COPY
#
# Add column at the end of the table
ALTER TABLE t1 ADD COLUMN f4 char(100) default "BIG WALL", ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Change virtual column expression
ALTER TABLE t1 CHANGE f3 f3 INT AS (f2 * f2) VIRTUAL, ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Add virtual column
ALTER TABLE t1 ADD COLUMN f5 INT AS (f2) VIRTUAL, ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Rename Column
ALTER TABLE t1 CHANGE f3 vcol INT AS (f2) VIRTUAL, ALGORITHM=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
# Rename table
ALTER TABLE t1 RENAME t2, algorithm=COPY;
affected rows: 1
info: Records: 1  Duplicates: 0  Warnings: 0
DROP TABLE t2;
affected rows: 0
CREATE TABLE t1(f1 INT NOT NULL,
f2 INT NOT NULL,
f3 INT NULL,
f4 INT as (f2) STORED,
f5 INT as (f3) STORED,
PRIMARY KEY(f1))ROW_FORMAT=COMPRESSED, ENGINE=INNODB;
INSERT INTO t1(f1, f2, f3) VALUES(1, 1, 1);
#
# ALGORITHM=INPLACE
#
# All the following cases needs table rebuild
# Add and Drop primary key
ALTER TABLE t1 ADD COLUMN col1 INT NOT NULL,DROP PRIMARY KEY,ADD PRIMARY KEY(col1), ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Make existing column NULLABLE
ALTER TABLE t1 MODIFY f2 INT, ALGORITHM= INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Make existing column NON-NULLABLE
ALTER TABLE t1 MODIFY f3 INT NOT NULL, ALGORITHM= INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Drop Stored Column
ALTER TABLE t1 DROP COLUMN f5, ALGORITHM= INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add base non-generated column as a last column in the compressed table
ALTER TABLE t1 ADD COLUMN f6 INT NOT NULL, ALGORITHM= INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add base non-generated column but not in the last position
ALTER TABLE t1 ADD COLUMN f7 INT NOT NULL after f3, ALGORITHM= INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Force the table to rebuild
ALTER TABLE t1 FORCE, ALGORITHM= INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Row format changes
ALTER TABLE t1 ROW_FORMAT=COMPRESSED, ALGORITHM= INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Engine table
ALTER TABLE t1 ENGINE=INNODB, ALGORITHM= INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
DROP TABLE t1;
affected rows: 0
CREATE TABLE t1(f1 INT PRIMARY KEY, f2 INT NOT NULL,
f3 INT AS (f2 * f2) VIRTUAL,
f4 INT NOT NULL UNIQUE,
INDEX`idx`(f2))ENGINE=INNODB;
CREATE TABLE t2(f1 INT NOT NULL, f2 INT NOT NULL,
INDEX(f1),
FOREIGN KEY `fidx` (f1) REFERENCES t1(f1))ENGINE=INNODB;
INSERT INTO t1(f1, f2, f4) VALUES(1, 2, 3);
#
# ALGORITHM=INPLACE
#
# Add secondary index
ALTER TABLE t1 ADD INDEX `idx1`(f4), ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Drop secondary index
ALTER TABLE t1 DROP INDEX `idx`, ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add Unique Index
ALTER TABLE t1 ADD UNIQUE INDEX `u1`(f2), ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Drop Unique Index
ALTER TABLE t1 DROP INDEX `f4`, ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add foreign & Drop foreign key
SET foreign_key_checks = 0;
affected rows: 0
ALTER TABLE t1 ADD FOREIGN KEY(f1) REFERENCES t2(f1), ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t2 DROP FOREIGN KEY `fidx`, ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
DROP TABLE t2, t1;
affected rows: 0
SET foreign_key_checks = 1;
affected rows: 0
CREATE TABLE t1(f1 INT NOT NULL,
f2 INT NOT NULL,
f3 INT AS (f2 * f2) VIRTUAL)engine=innodb;
INSERT INTO t1(f1, f2) VALUES(1, 1);
#
# ALGORITHM=INPLACE
#
# Add column at the end of the table
ALTER TABLE t1 ADD COLUMN f4 char(100) default "BIG WALL", ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Change virtual column expression
ALTER TABLE t1 CHANGE f3 f3 INT AS (f2 * f2) VIRTUAL, ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add virtual column
ALTER TABLE t1 ADD COLUMN f5 INT AS (f2) VIRTUAL, ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Rename Column
ALTER TABLE t1 CHANGE f3 vcol INT AS (f2) VIRTUAL, ALGORITHM=INPLACE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Rename table
ALTER TABLE t1 RENAME t2, algorithm=INPLACE;
affected rows: 0
DROP TABLE t2;
affected rows: 0
CREATE TABLE t1(f1 INT NOT NULL,
f2 INT NOT NULL,
f3 INT NULL,
f4 INT as (f2) STORED,
f5 INT as (f3) STORED,
PRIMARY KEY(f1))ROW_FORMAT=COMPRESSED, ENGINE=INNODB;
INSERT INTO t1(f1, f2, f3) VALUES(1, 1, 1);
#
# ALGORITHM=NOCOPY
#
# All the following cases needs table rebuild
# Add and Drop primary key
ALTER TABLE t1 ADD COLUMN col1 INT NOT NULL,DROP PRIMARY KEY,ADD PRIMARY KEY(col1), ALGORITHM=NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
# Make existing column NULLABLE
ALTER TABLE t1 MODIFY f2 INT, ALGORITHM= NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
# Make existing column NON-NULLABLE
ALTER TABLE t1 MODIFY f3 INT NOT NULL, ALGORITHM= NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
# Drop Stored Column
ALTER TABLE t1 DROP COLUMN f5, ALGORITHM= NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
# Add base non-generated column as a last column in the compressed table
ALTER TABLE t1 ADD COLUMN f6 INT NOT NULL, ALGORITHM= NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
# Add base non-generated column but not in the last position
ALTER TABLE t1 ADD COLUMN f7 INT NOT NULL after f3, ALGORITHM= NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
# Force the table to rebuild
ALTER TABLE t1 FORCE, ALGORITHM= NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
# Row format changes
ALTER TABLE t1 ROW_FORMAT=COMPRESSED, ALGORITHM= NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
# Engine table
ALTER TABLE t1 ENGINE=INNODB, ALGORITHM= NOCOPY;
ERROR 0A000: ALGORITHM=NOCOPY is not supported for this operation. Try ALGORITHM=INPLACE
DROP TABLE t1;
affected rows: 0
CREATE TABLE t1(f1 INT PRIMARY KEY, f2 INT NOT NULL,
f3 INT AS (f2 * f2) VIRTUAL,
f4 INT NOT NULL UNIQUE,
INDEX`idx`(f2))ENGINE=INNODB;
CREATE TABLE t2(f1 INT NOT NULL, f2 INT NOT NULL,
INDEX(f1),
FOREIGN KEY `fidx` (f1) REFERENCES t1(f1))ENGINE=INNODB;
INSERT INTO t1(f1, f2, f4) VALUES(1, 2, 3);
#
# ALGORITHM=NOCOPY
#
# Add secondary index
ALTER TABLE t1 ADD INDEX `idx1`(f4), ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Drop secondary index
ALTER TABLE t1 DROP INDEX `idx`, ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add Unique Index
ALTER TABLE t1 ADD UNIQUE INDEX `u1`(f2), ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Drop Unique Index
ALTER TABLE t1 DROP INDEX `f4`, ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add foreign & Drop foreign key
SET foreign_key_checks = 0;
affected rows: 0
ALTER TABLE t1 ADD FOREIGN KEY(f1) REFERENCES t2(f1), ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t2 DROP FOREIGN KEY `fidx`, ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
DROP TABLE t2, t1;
affected rows: 0
SET foreign_key_checks = 1;
affected rows: 0
CREATE TABLE t1(f1 INT NOT NULL,
f2 INT NOT NULL,
f3 INT AS (f2 * f2) VIRTUAL)engine=innodb;
INSERT INTO t1(f1, f2) VALUES(1, 1);
#
# ALGORITHM=NOCOPY
#
# Add column at the end of the table
ALTER TABLE t1 ADD COLUMN f4 char(100) default "BIG WALL", ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Change virtual column expression
ALTER TABLE t1 CHANGE f3 f3 INT AS (f2 * f2) VIRTUAL, ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add virtual column
ALTER TABLE t1 ADD COLUMN f5 INT AS (f2) VIRTUAL, ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Rename Column
ALTER TABLE t1 CHANGE f3 vcol INT AS (f2) VIRTUAL, ALGORITHM=NOCOPY;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Rename table
ALTER TABLE t1 RENAME t2, algorithm=NOCOPY;
affected rows: 0
DROP TABLE t2;
affected rows: 0
CREATE TABLE t1(f1 INT NOT NULL,
f2 INT NOT NULL,
f3 INT NULL,
f4 INT as (f2) STORED,
f5 INT as (f3) STORED,
PRIMARY KEY(f1))ROW_FORMAT=COMPRESSED, ENGINE=INNODB;
INSERT INTO t1(f1, f2, f3) VALUES(1, 1, 1);
#
# ALGORITHM=INSTANT
#
# All the following cases needs table rebuild
# Add and Drop primary key
ALTER TABLE t1 ADD COLUMN col1 INT NOT NULL,DROP PRIMARY KEY,ADD PRIMARY KEY(col1), ALGORITHM=INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
# Make existing column NULLABLE
ALTER TABLE t1 MODIFY f2 INT, ALGORITHM= INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
# Make existing column NON-NULLABLE
ALTER TABLE t1 MODIFY f3 INT NOT NULL, ALGORITHM= INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
# Drop Stored Column
ALTER TABLE t1 DROP COLUMN f5, ALGORITHM= INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
# Add base non-generated column as a last column in the compressed table
ALTER TABLE t1 ADD COLUMN f6 INT NOT NULL, ALGORITHM= INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
# Add base non-generated column but not in the last position
ALTER TABLE t1 ADD COLUMN f7 INT NOT NULL after f3, ALGORITHM= INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
# Force the table to rebuild
ALTER TABLE t1 FORCE, ALGORITHM= INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
# Row format changes
ALTER TABLE t1 ROW_FORMAT=COMPRESSED, ALGORITHM= INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
# Engine table
ALTER TABLE t1 ENGINE=INNODB, ALGORITHM= INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=INPLACE
DROP TABLE t1;
affected rows: 0
CREATE TABLE t1(f1 INT PRIMARY KEY, f2 INT NOT NULL,
f3 INT AS (f2 * f2) VIRTUAL,
f4 INT NOT NULL UNIQUE,
INDEX`idx`(f2))ENGINE=INNODB;
CREATE TABLE t2(f1 INT NOT NULL, f2 INT NOT NULL,
INDEX(f1),
FOREIGN KEY `fidx` (f1) REFERENCES t1(f1))ENGINE=INNODB;
INSERT INTO t1(f1, f2, f4) VALUES(1, 2, 3);
#
# ALGORITHM=INSTANT
#
# Add secondary index
ALTER TABLE t1 ADD INDEX `idx1`(f4), ALGORITHM=INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=NOCOPY
# Drop secondary index
ALTER TABLE t1 DROP INDEX `idx`, ALGORITHM=INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=NOCOPY
# Add Unique Index
ALTER TABLE t1 ADD UNIQUE INDEX `u1`(f2), ALGORITHM=INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=NOCOPY
# Drop Unique Index
ALTER TABLE t1 DROP INDEX `f4`, ALGORITHM=INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=NOCOPY
# Add foreign & Drop foreign key
SET foreign_key_checks = 0;
affected rows: 0
ALTER TABLE t1 ADD FOREIGN KEY(f1) REFERENCES t2(f1), ALGORITHM=INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=NOCOPY
ALTER TABLE t2 DROP FOREIGN KEY `fidx`, ALGORITHM=INSTANT;
ERROR 0A000: ALGORITHM=INSTANT is not supported for this operation. Try ALGORITHM=NOCOPY
DROP TABLE t2, t1;
affected rows: 0
SET foreign_key_checks = 1;
affected rows: 0
CREATE TABLE t1(f1 INT NOT NULL,
f2 INT NOT NULL,
f3 INT AS (f2 * f2) VIRTUAL)engine=innodb;
INSERT INTO t1(f1, f2) VALUES(1, 1);
#
# ALGORITHM=INSTANT
#
# Add column at the end of the table
ALTER TABLE t1 ADD COLUMN f4 char(100) default "BIG WALL", ALGORITHM=INSTANT;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Change virtual column expression
ALTER TABLE t1 CHANGE f3 f3 INT AS (f2 * f2) VIRTUAL, ALGORITHM=INSTANT;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Add virtual column
ALTER TABLE t1 ADD COLUMN f5 INT AS (f2) VIRTUAL, ALGORITHM=INSTANT;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Rename Column
ALTER TABLE t1 CHANGE f3 vcol INT AS (f2) VIRTUAL, ALGORITHM=INSTANT;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# Rename table
ALTER TABLE t1 RENAME t2, algorithm=INSTANT;
affected rows: 0
DROP TABLE t2;
affected rows: 0
